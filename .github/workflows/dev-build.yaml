name: ITSC-AI Development Docker image (amd64)

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ['master']
    paths-ignore:
      - '**.md'
      - 'cloud-deployments/*'
      - 'images/**/*'
      - '.vscode/**/*'
      - '**/.env.example'
      - '.github/ISSUE_TEMPLATE/**/*'
      - 'embed/**/*' # Embed should be published to frontend (yarn build:publish) if any changes are introduced
      - 'server/utils/agents/aibitat/example/**/*' # Do not push new image for local dev testing of new aibitat images.
      - '**/*.log' # Log files
      - 'tmp/**/*' # Temporary files
      - 'dist/**/*' # Build artifacts
      - 'node_modules/**/*' # Node modules
      - 'frontend/.env.production' # Production environment variables for frontend
      - 'server/.env.production' # Production environment variables for server
      - 'server/storage/**/*' # Storage files
      - 'server/storage/app/public/uploads/**/*' # Uploaded files
      - 'collector/hotdir/**/*' # Collector hotdir files
      - 'collector/outputs/**/*' # Collector output files

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      packages: write
      contents: read
      security-events: write # For vulnerability scanning
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
   
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          sbom: true
          provenance: mode=max
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan docker image
        uses: anchore/scan-action@v3
        with:
          image: ghcr.io/${{ github.repository }}:dev
          fail-build: false
          severity-cutoff: high
          